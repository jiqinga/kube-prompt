// Code generated by 'option-gen'. DO NOT EDIT.

package kube

import (
	prompt "github.com/c-bata/go-prompt"
)

var patchOptions = []prompt.Suggest{
	{Text: "--allow-missing-template-keys", Description: "如果为真，当模板中缺少字段或映射键时，忽略模板中的任何错误。仅适用于 golang 和 jsonpath 输出格式。 "},
	{Text: "--dry-run", Description: "如果为真，仅打印将会发送的对象，而不实际发送。 "},
	{Text: "-f", Description: "文件名、目录或指向标识要更新的资源的文件的 URL "},
	{Text: "--filename", Description: "文件名、目录或指向标识要更新的资源的文件的 URL "},
	{Text: "-k", Description: "处理 kustomization 目录。此标志不能与 -f 或 -R 一起使用。 "},
	{Text: "--kustomize", Description: "处理 kustomization 目录。此标志不能与 -f 或 -R 一起使用。 "},
	{Text: "--local", Description: "如果为真，补丁操作将基于文件的内容，而非服务器端的资源。 "},
	{Text: "-o", Description: "输出格式。其中之一 :  json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-file."},
	{Text: "--output", Description: "输出格式。其中之一 :  json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-file."},
	{Text: "-p", Description: "要应用于资源 JSON 文件的补丁。 "},
	{Text: "--patch", Description: "要应用于资源 JSON 文件的补丁。 "},
	{Text: "--record", Description: "在资源注解中记录当前的 kubectl 命令。如果设置为 false，则不记录命令。如果设置为 true，则记录命令。如果未设置，默认情况下仅在已存在注解值时更新现有注解值。 "},
	{Text: "-R", Description: "递归处理在 -f、--filename 中使用的目录。当您想要管理在同一目录中组织的相关清单时很有用。 "},
	{Text: "--recursive", Description: "递归处理在 -f、--filename 中使用的目录。当您想要管理在同一目录中组织的相关清单时很有用。 "},
	{Text: "--template", Description: "在 -o=go-template 或 -o=go-template-file 时使用的模板字符串或模板文件的路径。模板格式为 golang 模板 [http] : //golang.org/pkg/text/template/#pkg-overview]."},
	{Text: "--type", Description: "所提供的补丁类型；其中之一为 [json 合并 策略] "},
}

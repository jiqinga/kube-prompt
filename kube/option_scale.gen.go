// Code generated by 'option-gen'. DO NOT EDIT.

package kube

import (
	prompt "github.com/c-bata/go-prompt"
)

var scaleOptions = []prompt.Suggest{
	{Text: "--all", Description: "选择指定资源类型所在命名空间中的所有资源 "},
	{Text: "--allow-missing-template-keys", Description: "如果为真，当模板中缺少字段或映射键时，忽略模板中的任何错误。仅适用于 golang 和 jsonpath 输出格式。 "},
	{Text: "--current-replicas", Description: "当前大小的前提条件。要求资源的当前大小与此值匹配才能进行缩放。 "},
	{Text: "-f", Description: "文件名、目录或指向文件的 URL，用于标识要设置新大小的资源 "},
	{Text: "--filename", Description: "文件名、目录或指向文件的 URL，用于标识要设置新大小的资源 "},
	{Text: "-k", Description: "处理 kustomization 目录。此标志不能与 -f 或 -R 一起使用。 "},
	{Text: "--kustomize", Description: "处理 kustomization 目录。此标志不能与 -f 或 -R 一起使用。 "},
	{Text: "-o", Description: "输出格式。其中之一 :  json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-file."},
	{Text: "--output", Description: "输出格式。其中之一 :  json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-file."},
	{Text: "--record", Description: "在资源注解中记录当前的 kubectl 命令。如果设置为 false，则不记录该命令。如果设置为 true，则记录该命令。如果未设置，默认情况下仅在已存在注解值时更新现有值。 "},
	{Text: "-R", Description: "递归处理 -f 或 --filename 中使用的目录。当您想要管理在同一目录中组织的相关清单时很有用。 "},
	{Text: "--recursive", Description: "递归处理 -f 或 --filename 中使用的目录。当您想要管理在同一目录中组织的相关清单时很有用。 "},
	{Text: "--replicas", Description: "新的期望副本数量。必需的。 "},
	{Text: "--resource-version", Description: "资源版本的前置条件。要求当前资源版本与此值匹配才能进行缩放。 "},
	{Text: "-l", Description: "选择器（标签查询）用于筛选，支持 '=' 、 '==' 和 '!=' 。（例如 -l key1=value1,key2=value2 ） "},
	{Text: "--selector", Description: "选择器（标签查询）用于筛选，支持 '=' 、 '==' 和 '!=' 。（例如 -l key1=value1,key2=value2 ） "},
	{Text: "--template", Description: "在 -o=go-template 或 -o=go-template-file 时使用的模板字符串或模板文件的路径。该模板格式为 golang 模板 [http] : //golang.org/pkg/text/template/#pkg-overview]."},
	{Text: "--timeout", Description: "在放弃缩放操作前等待的时长，零表示不等待。任何其他值都应包含相应的时间单位（例如 1 秒、2 分钟、3 小时）。 "},
}

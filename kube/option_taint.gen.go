// Code generated by 'option-gen'. DO NOT EDIT.

package kube

import (
	prompt "github.com/c-bata/go-prompt"
)

var taintOptions = []prompt.Suggest{
	{Text: "--all", Description: "选择集群中的所有节点 "},
	{Text: "--allow-missing-template-keys", Description: "如果为真，在模板中缺少字段或映射键时忽略模板中的任何错误。仅适用于 golang 和 jsonpath 输出格式。 "},
	{Text: "-o", Description: "输出格式。其中之一 :  json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-file."},
	{Text: "--output", Description: "输出格式。其中之一 :  json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-file."},
	{Text: "--overwrite", Description: "如果为真，则允许覆盖污点，否则拒绝覆盖现有污点的污点更新。 "},
	{Text: "-l", Description: "选择器（标签查询）用于筛选，支持 '=' 、 '==' 和 '!=' 。（例如 -l key1=value1,key2=value2） "},
	{Text: "--selector", Description: "选择器（标签查询）用于筛选，支持 '=' 、 '==' 和 '!=' 。（例如 -l key1=value1,key2=value2） "},
	{Text: "--template", Description: "当 -o=go-template 或 -o=go-template-file 时，用于使用的模板字符串或模板文件的路径。模板格式为 Go 语言模板 [http] : //golang.org/pkg/text/template/#pkg-overview]."},
	{Text: "--validate", Description: "如果为真，则在发送输入之前使用模式对其进行验证 "},
}

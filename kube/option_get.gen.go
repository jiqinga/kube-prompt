// Code generated by 'option-gen'. DO NOT EDIT.

package kube

import (
	prompt "github.com/c-bata/go-prompt"
)

var getOptions = []prompt.Suggest{
	{Text: "-A", Description: "如果存在，列出所有命名空间中的请求对象。即使使用 --namespace 指定，当前上下文中的命名空间也会被忽略。 "},
	{Text: "--all-namespaces", Description: "如果存在，列出所有命名空间中的请求对象。即使使用 --namespace 指定，当前上下文中的命名空间也会被忽略。 "},
	{Text: "--allow-missing-template-keys", Description: "如果为真，当模板中缺少字段或映射键时，忽略模板中的任何错误。仅适用于 golang 和 jsonpath 输出格式。 "},
	{Text: "--chunk-size", Description: "以分块的形式而不是一次性返回大型列表。传递 0 可禁用。此标志为测试版，未来可能会更改。 "},
	{Text: "--field-selector", Description: "选择器（字段查询）用于筛选，支持 '=' 、 '==' 和 '!=' 。（例如：--field-selector key1=value1,key2=value2）。服务器对每种类型仅支持有限数量的字段查询。 "},
	{Text: "-f", Description: "文件名、目录或指向文件的 URL，用于确定要从服务器获取的资源。 "},
	{Text: "--filename", Description: "文件名、目录或指向文件的 URL，用于确定要从服务器获取的资源。 "},
	{Text: "--ignore-not-found", Description: "如果所请求的对象不存在，该命令将返回退出代码 0 。 "},
	{Text: "-k", Description: "处理 kustomization 目录。此标志不能与 -f 或 -R 一起使用。 "},
	{Text: "--kustomize", Description: "处理 kustomization 目录。此标志不能与 -f 或 -R 一起使用。 "},
	{Text: "-L", Description: "接受以逗号分隔的标签列表，这些标签将作为列呈现。名称区分大小写。您还可以使用多个标志选项，例如 -L label1 -L label2... "},
	{Text: "--label-columns", Description: "接受以逗号分隔的标签列表，这些标签将作为列呈现。名称区分大小写。您还可以使用多个标志选项，例如 -L label1 -L label2... "},
	{Text: "--no-headers", Description: "在使用默认或自定义列的输出格式时，不打印表头（默认打印表头）。 "},
	{Text: "-o", Description: "输出格式。其中之一 :  json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http: //kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http: //golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http: //kubernetes.io/docs/user-guide/jsonpath]."},
	{Text: "--output", Description: "输出格式。其中之一 :  json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http: //kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http: //golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http: //kubernetes.io/docs/user-guide/jsonpath]."},
	{Text: "--output-watch-events", Description: "当使用 --watch 或 --watch-only 时，输出监视事件对象。现有的对象作为初始的 ADDED 事件输出。 "},
	{Text: "--raw", Description: "从服务器请求的原始 URI 。使用 kubeconfig 文件指定的传输方式。 "},
	{Text: "-R", Description: "递归处理在 -f、--filename 中使用的目录。当您想要管理在同一目录中组织的相关清单时很有用。 "},
	{Text: "--recursive", Description: "递归处理在 -f、--filename 中使用的目录。当您想要管理在同一目录中组织的相关清单时很有用。 "},
	{Text: "-l", Description: "选择器（标签查询）用于筛选，支持 '='、'==' 和 '!=' 。（例如 -l key1=value1,key2=value2） "},
	{Text: "--selector", Description: "选择器（标签查询）用于筛选，支持 '='、'==' 和 '!=' 。（例如 -l key1=value1,key2=value2） "},
	{Text: "--server-print", Description: "如果为真，让服务器返回相应的表格输出。支持扩展 API 和自定义资源定义（CRDs）。 "},
	{Text: "--show-kind", Description: "如果存在，列出所请求对象的资源类型。 "},
	{Text: "--show-labels", Description: "在打印时，将所有标签显示为最后一列（默认隐藏标签列） "},
	{Text: "--sort-by", Description: "如果不为空，使用此字段规范对列表类型进行排序。该字段规范表示为 JSONPath 表达式（例如 '{.metadata.name}'）。此 JSONPath 表达式在 API 资源中指定的字段必须是整数或字符串。 "},
	{Text: "--template", Description: "当 `-o=go-template` 或 `-o=go-template-file` 时使用的模板字符串或模板文件的路径。该模板格式为 Go 语言模板 [http] : //golang.org/pkg/text/template/#pkg-overview]."},
	{Text: "-w", Description: "在列出/获取请求的对象后，观察其变化。如果未提供对象名称，则排除未初始化的对象。 "},
	{Text: "--watch", Description: "在列出/获取请求的对象后，观察其变化。如果未提供对象名称，则排除未初始化的对象。 "},
	{Text: "--watch-only", Description: "监视所请求的对象的更改，而无需先列出/获取。 "},
}
